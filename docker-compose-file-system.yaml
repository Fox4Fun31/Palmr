services:
  palmr:
    image: kyantech/palmr:latest # Make sure to use the correct version (latest) of the image
    container_name: palmr-application
    environment:
      # Storage Configuration
      - ENABLE_S3=false # Set to 'false' to use local filesystem storage instead of S3/MinIO or true to use S3/MinIO in this case we are using filesystem storage
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-change-this-key-in-production-min-32-chars} # Required for filesystem encryption (min 32 chars)

      # Server environment variables
      - FRONTEND_URL=http://palmr:${APP_EXTERNAL_PORT:-5487} # Frontend URL - Make sure to use the correct frontend URL, depends on where the frontend is running, its prepared for localhost, but you can change it to your frontend URL if needed
      - API_BASE_URL=http://palmr:${API_EXTERNAL_PORT:-3333} # Using Docker service name for internal communication
      - MAX_FILESIZE=${MAX_FILESIZE:-1073741824} # Max Filesize for upload - Declared in Bytes. Default is 1GB. can be changed by admin in the frontend.
    ports:
      - "${API_EXTERNAL_PORT:-3333}:3333" # Server port (default: 3333) can be overridden by env var
      - "${APP_EXTERNAL_PORT:-5487}:5487" # Web port (default: 5487) can be overridden by env var
    volumes:
      - palmr_uploads:/app/server/uploads # Uploads folder for the application
      - palmr_temp_chunks:/app/server/temp-chunks # Temp chunks folder for the application
      - palmr_database:/app/server/prisma # SQLite database folder
    restart: unless-stopped
    healthcheck:
      test: [
          "CMD",
          "sh",
          "-c",
          "wget --no-verbose --tries=1 --spider http://palmr:${API_EXTERNAL_PORT:-3333}/health && wget --no-verbose --tries=1 --spider http://palmr:${APP_EXTERNAL_PORT:-5487}",
        ] # Healthcheck for the application
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s # Reduced start period since we don't need to wait for PostgreSQL

volumes:
  palmr_uploads:
  palmr_temp_chunks:
  palmr_database: # Volume for SQLite database persistence
